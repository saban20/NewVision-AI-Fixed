version: '3.8'

services:
  # Backend Flask service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: newvision-backend
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_APP=app.py
      - FLASK_DEBUG=1
      - JWT_SECRET_KEY=dev-secret-change-in-production
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  # Frontend React service
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: newvision-frontend
    volumes:
      - ./web:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000/api
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  # Optional database service (disabled by default)
  # Uncomment and configure if needed
  # database:
  #   image: postgres:14-alpine
  #   container_name: newvision-postgres
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=newvision
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

volumes:
  backend_data:
  # postgres_data:

networks:
  default:
    name: newvision-network